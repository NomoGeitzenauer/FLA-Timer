<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/style.css">
    <link rel="stylesheet" href="/reset.css">
    <title>FLA-Bewerbe</title>

</head>

<body>
    <header>
        <h1><a href="/bewerbe">FLA-Timer</a></h1>
        <h3>Bewerb Erstellen</h3>
    </header>

    <main>
        <form id="bewerbForm" class="create-bewerb">
            <label for="bew_name">Bewerbsname:</label>
            <input type="text" id="bew_name" name="bew_name" required>

            <label for="bew_datum">Datum:</label>
            <input type="datetime-local" id="bew_datum" name="bew_datum" required>

            <label for="bew_art">Bewerbsart:</label>
            <div class="weather-selector">
                <span>
                    <input type="radio" name="bew_art" id="bew_art_1" value="1">
                    <label for="bew_art_1">Art 1</label>
                </span>
                <span>
                    <input type="radio" name="bew_art" id="bew_art_2" value="2">
                    <label for="bew_art_2">Art 2</label>
                </span>
                <span>
                    <input type="radio" name="bew_art" id="bew_art_3" value="3">
                    <label for="bew_art_3">Art 3</label>
                </span>
                
            </div>
            <!-- <input type="number" id="bew_art" name="bew_art" required>
             -->
             <label for="threshholdalterspunkte">Alterspunkte-Schwelle: </label>
             <input type="number" name="bew_threshholdalterspunkte" id="bew_threshholdalterspunkte" required>
             <label for="valuealterspunte">Alterspunkte pro Mitglied: </label>
             <input type="number" name="bew_valuealterspunkte" id="bew_valuealterspunkte" required>
             
            <label for="bew_wetter">Wetter:</label>
            <input type="text" id="bew_wetter" name="bew_wetter" required>

            <button class="full-width" type="submit">Bewerb erstellen</button>
        </form>

        <p class="center">Angelegte Bewerbe</p>

        <div class="scrollable-container">
            <% bewerbe.forEach(bewerb=> { %>
                <div class="bewerb-link">

                    <a href="/bewerbe/<%=bewerb.id_bew%>/durchlaufe">
                        <%= bewerb.bew_name %>
                            <%= bewerb.bew_datum_formatted %>
                    </a>
                    <button data-index="<%=bewerb.id_bew%>" type="button" class="delete-button"> X</button>
                </div>
                <% }); %>
        </div>
    </main>

    <footer>
        <p>2024 Thomas & Nomo</p>
    </footer>
    <script>

        document.querySelector('main').addEventListener('click', async function (event) {
            console.log('Click event triggered');
            if (event.target.classList.contains('delete-button')) {
                const bewerbId = event.target.dataset.index; // Use event.target instead of event.currentTarget
                console.log(bewerbId);

                try {
                    const response = await fetch(`/deleteBewerb/${bewerbId}`, {
                        method: 'POST', // Change method to POST
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ bewerbId: bewerbId }) // Include bewerbId in the request body
                    });
                    console.log('delete sent');

                    if (response.ok) {
                        // Delete operation successful, remove the corresponding element from the DOM
                        event.target.closest('.bewerb-link').remove();
                        alert("Bewerb gelÃ¶scht");
                        window.location.reload();
                    } else {
                        // Handle errors
                        console.error('Failed to delete Bewerb');
                    }
                } catch (error) {
                    // Handle network errors
                    console.error('Network error:', error);
                }
            }
        });
        document.getElementById("bewerbForm").addEventListener("submit", async (event) => {
            event.preventDefault(); // Prevent default form submission behavior

            const formData = new FormData(document.getElementById("bewerbForm"));

            const bewerbData = {};
            for (const [key, value] of formData.entries()) {
                bewerbData[key] = value;
            }

            try {
                const response = await fetch("/bewerbe", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json" // Set Content-Type to JSON
                    },
                    body: JSON.stringify(bewerbData) // Serialize form data as JSON
                });
                if (response.ok) {
                    alert("Bewerb erstellt");
                    window.location.reload();
                }
                else {
                    alert("Fehler beim Erstellen des Bewerbs");
                }
            } catch (error) {
                console.error('fetch /bewerb error:', error);
            }
        });
    </script>

</body>

</html>